{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyPressed","event","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,WAAa,SAACC,GACRA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,WAAW,4BAAD,OAA8BE,EAAMC,IAApC,QAfhC,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,cAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,cAV/C,oBAmBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,4BAAIF,KAAKR,MAAMC,mBAtBvB,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.175295a4.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyPressed);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyPressed);\n  }\n\n  keyPressed = (event: KeyboardEvent) => {\n    if (event.key) {\n      this.setState({ pressedKey: `The last pressed key is <${event.key}>` });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p>{this.state.pressedKey}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}